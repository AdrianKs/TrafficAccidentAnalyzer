<!DOCTYPE html>
<html lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:th="http://www.thymeleaf.org">
<head>
   <link href="../css/myCss.css" rel="stylesheet">
   <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet/v0.7.7/leaflet.css" />
   <script src="../js/app.js" type="text/javascript"></script>
   <script src="http://cdn.leafletjs.com/leaflet/v0.7.7/leaflet.js"></script>
   <script src="//d3js.org/d3.v3.min.js"></script>
   <script src="realworldpoints.js" type="text/javascript"></script>
   <script src="leaflet-heat.js" type="text/javascript"></script>
    <style>
        body { font: 16px/1.4 "Helvetica Neue", Arial, sans-serif; }
        .ghbtns { position: relative; top: 4px; margin-left: 5px; }
        a { color: #0077ff; }
	      .bar{
		    fill: steelblue;
		  }
		
		  .bar:hover{
		    fill: brown;
		  }
		.axis {
		  font: 10px sans-serif;
		}
	
		.axis path,
		.axis line {
		  fill: none;
		  stroke: #000;
		  shape-rendering: crispEdges;
		}
    </style
   <meta charset="UTF-8"></meta>
   <title>Hello world</title>
</head>
<body>
	<div class="container">
		<div class="mapContainer">
			<div id="map"></div>
		</div>
		
		<div class="diagram1Container">
			<p>Number of Accidents to Year of Car<p>
			<div id="dia1"></div>
			<p>Number of Accidents by Type<p>
			<div id="dia2"></div>
		</div>
		<div class="diagram3Container">
			<p>Number of Accidents to Brand of Car<p>
			<div id="dia3"></div>
			<p>Number of Accidents to Number of Passengers<p>
			<div id="dia4"></div>
		</div>
		
	</div>


	<script src="../js/test1.js"></script>
	<script src="../js/realworldpoints.js"></script>
	<script>
		var map = L.map('map').setView([43.70, -79.375], 12);
		
		var tiles = L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
		    attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors',
		}).addTo(map);
		
		var ap = ${ap}
		console.log(${ap})
		
		ap = ap.map(function (p) {return [p[0], p[1]]; });
		
		//addressPoints = addressPoints.map(function (p) { return [p[0], p[1]]; });
		
		var heat = L.heatLayer(ap).addTo(map);
	</script>
	


<script>
// set the dimensions of the canvas
var margin = {top: 20, right: 20, bottom: 70, left: 40},
    width = 800 - margin.left - margin.right,
    height = 400 - margin.top - margin.bottom;


// set the ranges
var x = d3.scale.ordinal().rangeRoundBands([0, width], .05);

var y = d3.scale.linear().range([height, 0]);

// define the axis
var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom")


var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left")
    .ticks(10);


// add the SVG element
var svg = d3.select("#dia1").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", 
          "translate(" + margin.left + "," + margin.top + ")");

// load the data
//var data = [{"Letter": "A","Freq": 20},{"Letter" : "B","Freq": 12}]
//var data = [{"_1":"Audi","_2":528},{"_1":"BMW","_2":556}]
//var data = [{"Letter":"Audi","Freq":528},{"Letter":"BMW","Freq":556}]
var data = ${numbAccidentsToBrand}


//d3.json(jsonObject, function(error, data) {

    data.forEach(function(d) {
        //d.Letter = d.Letter;
        //d.Freq = +d.Freq;
        d._1 = d._1;
        d._2 = +d._2;
    });
	
  // scale the range of the data
  x.domain(data.map(function(d) { return d._1; }));
  y.domain([0, d3.max(data, function(d) { return d._2; })]);

  // add axis
  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis)
    .selectAll("text")
      .style("text-anchor", "end")
      .attr("dx", "-.8em")
      .attr("dy", "-.55em")
      .attr("transform", "rotate(-90)" );

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 5)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("Count");


  // Add bar chart
  svg.selectAll("bar")
      .data(data)
    .enter().append("rect")
      .attr("class", "bar")
      .attr("x", function(d) { return x(d._1); })
      .attr("width", x.rangeBand())
      .attr("y", function(d) { return y(d._2); })
      .attr("height", function(d) { return height - y(d._2); });

//});

</script>

<script>
// set the dimensions of the canvas
var margin = {top: 20, right: 20, bottom: 70, left: 40},
    width = 800 - margin.left - margin.right,
    height = 400 - margin.top - margin.bottom;


// set the ranges
var x = d3.scale.ordinal().rangeRoundBands([0, width], .05);

var y = d3.scale.linear().range([height, 0]);

// define the axis
var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom")


var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left")
    .ticks(10);


// add the SVG element
var svg = d3.select("#dia2").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", 
          "translate(" + margin.left + "," + margin.top + ")");

// load the data
//var data = [{"Letter": "A","Freq": 20},{"Letter" : "B","Freq": 12}]
//var data = [{"_1":"Audi","_2":528},{"_1":"BMW","_2":556}]
//var data = [{"Letter":"Audi","Freq":528},{"Letter":"BMW","Freq":556}]
var data = ${numbOfDiffAccidentType}


//d3.json(jsonObject, function(error, data) {

    data.forEach(function(d) {
        //d.Letter = d.Letter;
        //d.Freq = +d.Freq;
        d._1 = d._1;
        d._2 = +d._2;
    });
	
  // scale the range of the data
  x.domain(data.map(function(d) { return d._1; }));
  y.domain([0, d3.max(data, function(d) { return d._2; })]);

  // add axis
  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis)
    .selectAll("text")
      .style("text-anchor", "end")
      .attr("dx", "-.8em")
      .attr("dy", "-.55em")
      .attr("transform", "rotate(-90)" );

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 5)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("Count");


  // Add bar chart
  svg.selectAll("bar")
      .data(data)
    .enter().append("rect")
      .attr("class", "bar")
      .attr("x", function(d) { return x(d._1); })
      .attr("width", x.rangeBand())
      .attr("y", function(d) { return y(d._2); })
      .attr("height", function(d) { return height - y(d._2); });

//});

</script>

<script>
// set the dimensions of the canvas
var margin = {top: 20, right: 20, bottom: 70, left: 40},
    width = 800 - margin.left - margin.right,
    height = 400 - margin.top - margin.bottom;


// set the ranges
var x = d3.scale.ordinal().rangeRoundBands([0, width], .05);

var y = d3.scale.linear().range([height, 0]);

// define the axis
var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom")


var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left")
    .ticks(10);


// add the SVG element
var svg = d3.select("#dia3").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", 
          "translate(" + margin.left + "," + margin.top + ")");

// load the data
var data = ${numbAccidentsToYearOfCar}


//d3.json(jsonObject, function(error, data) {

    data.forEach(function(d) {
        d._1 = d._1;
        d._2 = +d._2;
    });
	
  // scale the range of the data
  x.domain(data.map(function(d) { return d._1; }));
  y.domain([0, d3.max(data, function(d) { return d._2; })]);

  // add axis
  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis)
    .selectAll("text")
      .style("text-anchor", "end")
      .attr("dx", "-.8em")
      .attr("dy", "-.55em")
      .attr("transform", "rotate(-90)" );

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 5)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("Count");


  // Add bar chart
  svg.selectAll("bar")
      .data(data)
    .enter().append("rect")
      .attr("class", "bar")
      .attr("x", function(d) { return x(d._1); })
      .attr("width", x.rangeBand())
      .attr("y", function(d) { return y(d._2); })
      .attr("height", function(d) { return height - y(d._2); });

//});

</script>

<script>
// set the dimensions of the canvas
var margin = {top: 20, right: 20, bottom: 70, left: 40},
    width = 800 - margin.left - margin.right,
    height = 400 - margin.top - margin.bottom;


// set the ranges
var x = d3.scale.ordinal().rangeRoundBands([0, width], .05);

var y = d3.scale.linear().range([height, 0]);

// define the axis
var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom")


var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left")
    .ticks(10);


// add the SVG element
var svg = d3.select("#dia4").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", 
          "translate(" + margin.left + "," + margin.top + ")");

// load the data
var data = ${numbAccidentsToNumbPasseger}


//d3.json(jsonObject, function(error, data) {

    data.forEach(function(d) {
        d._1 = d._1;
        d._2 = +d._2;
    });
	
  // scale the range of the data
  x.domain(data.map(function(d) { return d._1; }));
  y.domain([0, d3.max(data, function(d) { return d._2; })]);

  // add axis
  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis)
    .selectAll("text")
      .style("text-anchor", "end")
      .attr("dx", "-.8em")
      .attr("dy", "-.55em")
      .attr("transform", "rotate(-90)" );

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 5)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("Count");


  // Add bar chart
  svg.selectAll("bar")
      .data(data)
    .enter().append("rect")
      .attr("class", "bar")
      .attr("x", function(d) { return x(d._1); })
      .attr("width", x.rangeBand())
      .attr("y", function(d) { return y(d._2); })
      .attr("height", function(d) { return height - y(d._2); });

//});

</script>

</body>
</html>